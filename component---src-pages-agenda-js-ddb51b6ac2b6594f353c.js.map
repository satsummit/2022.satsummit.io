{"version":3,"file":"component---src-pages-agenda-js-ddb51b6ac2b6594f353c.js","mappings":"gRAUA,MAAMA,GAAcC,EAAAA,EAAAA,eAAc,MAU3B,SAASC,EAAT,GAAgE,IAA3C,SAAEC,EAAF,cAAYC,EAAZ,YAA2BC,GAAe,EACpE,MAAM,EAACC,EAAD,EAAYC,IAAgBC,EAAAA,EAAAA,UAASJ,IACrC,EAACK,EAAD,EAAUC,IAAcF,EAAAA,EAAAA,UAAS,IAEjCG,GAAuBC,EAAAA,EAAAA,cAC1BC,GACCN,GAAcO,IACW,mBAAhBT,GAA8BA,EAAYQ,EAAQC,GAClDD,MAEX,CAACR,IAGGU,GAAcH,EAAAA,EAAAA,cAAY,IAAa,IAAZ,GAAEI,GAAS,EAC1CN,GAAYO,GACNA,EAAKC,MAAMC,GAAMA,EAAEH,KAAOA,IAErBC,EAEAA,EAAKG,OAAO,CAAEJ,WAGxB,IAEGK,GAAgBT,EAAAA,EAAAA,cAAY,IAAa,IAAZ,GAAEI,GAAS,EAC5CN,GAAYO,GAASA,EAAKK,QAAQH,GAAMA,EAAEH,KAAOA,QAChD,KAGHO,EAAAA,EAAAA,YAAU,MACHnB,GAAiBK,EAAQe,QAC5Bb,EAAqBF,EAAQ,GAAGO,MAEjC,CAACL,EAAsBP,EAAeK,IAEzC,MAAMgB,EAAQ,CACZnB,YACAC,aAAcI,EACdI,cACAM,gBACAZ,WAGF,OAAO,gBAACT,EAAY0B,SAAb,CAAsBD,MAAOA,GAAQtB,GAqBvC,SAASwB,IACd,MAAMC,GAAUC,EAAAA,EAAAA,YAAW7B,GAE3B,IAAK4B,EACH,MAAM,IAAIE,MAAJ,iFAKR,OAAOF,E,4BC3DT,MAAMG,EAAWC,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,oKACVC,EAAAA,EAAAA,cAGYC,EAAAA,EAAAA,UAAS,kBACNC,EAAAA,EAAAA,WAASD,EAAAA,EAAAA,UAAS,iBAAkB,IACjDA,EAAAA,EAAAA,UAAS,wBACEC,EAAAA,EAAAA,WAASD,EAAAA,EAAAA,UAAS,iBAAkB,GAGjDE,EAAAA,MAAAA,QAVU,4FAYSD,EAAAA,EAAAA,WAASD,EAAAA,EAAAA,UAAS,iBAAkB,IAAQG,EAAAA,EAAAA,IAC/D,OAOED,EAAAA,MAAAA,QApBQ,iDA0BRE,EAAkBN,EAAAA,QAAAA,QAAAA,WAAH,iEAAGA,CAAH,0DAERK,EAAAA,EAAAA,IAAa,EAAG,IAGvBE,GAAwBP,EAAAA,EAAAA,SAAOQ,EAAAA,IAAYC,MAAM,CACrDC,GAAI,IACJC,KAAM,WAFmB,kFAAGX,CAAH,8SAOVE,EAAAA,EAAAA,UAAS,uBAEPA,EAAAA,EAAAA,UAAS,kBAAoBA,EAAAA,EAAAA,UAAS,kBAI9CA,EAAAA,EAAAA,UAAS,kBAOPA,EAAAA,EAAAA,UAAS,sBAGlB,QAAC,OAAEU,GAAH,SACAA,IACAC,EAAAA,EAAAA,KADM,0DAEYX,EAAAA,EAAAA,UAAS,2BAahBG,EAAAA,EAAAA,IAAa,MAIrB,SAASS,EAAQC,GACtB,MAAM,SAAE5C,KAAa6C,GAASD,EAE9B,OAAO,gBAAChB,EAAaiB,EAAO7C,GAOvB,SAAS8C,EAAQF,GACtB,MAAM,SAAE5C,EAAF,MAAY+C,EAAZ,MAAmBC,KAAUH,GAASD,GACtC,UAAEzC,EAAF,aAAaC,EAAb,YAA2BQ,EAA3B,cAAwCM,GAAkBM,IAWhE,OATAJ,EAAAA,EAAAA,YAAU,KACJ4B,GACFpC,EAAY,CAAEC,GAAImC,IAEb,KACL9B,EAAc,CAAEL,GAAImC,OAErB,CAACA,EAAOpC,EAAaM,IAGtB,0BACE,gBAACkB,EAAD,eACEa,KAAK,IACLC,QAAUC,IACRA,EAAEC,iBACFhD,EAAa4C,IAEfK,MAAK,UAAYN,EAAZ,OACLN,OAAQtC,IAAc6C,EACtB,gBAAeM,OAAOnD,IAAc6C,IAChCH,GAEH7C,IAYF,SAASuD,EAAWX,GACzB,MAAM,SAAE5C,EAAF,MAAYgD,KAAUH,GAASD,GAC/B,UAAEzC,GAAcqB,IAEtB,OACErB,IAAc6C,GACZ,gBAACb,EAAoBU,EAAO7C,G,kGCxHlC,MAAMwD,GAAsBC,EAAAA,EAAAA,mBAAH,sCAInBxB,EAAAA,MAAAA,SAJmB,8DAUnByB,GAAgB7B,EAAAA,EAAAA,SAAO8B,EAAAA,GAAKrB,MAAM,CACtCC,GAAI,QADa,4EAAGV,CAAH,gBAMb+B,EAAY/B,EAAAA,QAAAA,OAAAA,WAAH,6DAAGA,CAAH,kDACXgC,EAAAA,EAAAA,mBAIEC,GAAWjC,EAAAA,EAAAA,SAAOQ,EAAAA,IAAYC,MAAM,CACxCC,GAAI,KACJC,KAAM,WAFM,uEAAGX,CAAH,MAORkC,GAAWC,EAAAA,EAAAA,IACfnC,EAAAA,EAAAA,SAAO8B,EAAAA,GAAKrB,MAAM,CAChBC,GAAI,UACJ0B,KAAM,CAAEC,QAAS,CAAC,gBAAiB,kBAHZ,uEACzBrC,CADyB,qIAMnBI,EAAAA,MAAAA,SANoB,OAAD,sGAQNC,EAAAA,EAAAA,OACDF,EAAAA,EAAAA,WAASD,EAAAA,EAAAA,UAAS,iBAAkB,IAAYA,EAAAA,EAAAA,UAC5D,yBAMYG,EAAAA,EAAAA,IAAa,MACZA,EAAAA,EAAAA,IAAa,IACdF,EAAAA,EAAAA,WAASD,EAAAA,EAAAA,UAAS,iBAAkB,IAC9CA,EAAAA,EAAAA,UAAS,uBAEXE,EAAAA,MAAAA,SArBoB,IAAD,uEAuBNC,EAAAA,EAAAA,QAInB,gBAAC,KAAD,CAAMiC,QAAM,EAACC,SAAS,UAGlBC,EAAiBxC,EAAAA,QAAAA,OAAAA,WAAH,kEAAGA,CAAH,oDAGhBI,EAAAA,MAAAA,SAHgB,uEAOhBA,EAAAA,MAAAA,QAPgB,wEAYdqC,GAAgBzC,EAAAA,EAAAA,SAAOQ,EAAAA,IAAYC,MAAM,CAC7CC,GAAI,KACJC,KAAM,UAFW,4EAAGX,CAAH,MAOb0C,GAAe1C,EAAAA,EAAAA,SAAO8B,EAAAA,GAAKrB,MAAM,CACrCC,GAAI,UACJ0B,KAAM,CACJC,QAAS,CAAC,gBAAiB,eAC3BM,SAAU,CAAC,YAAa,eACxBC,QAAS,CAAC,YAAa,kBALT,2EAAG5C,CAAH,mBAQd6C,EAAAA,GAEIb,EAAAA,EAAAA,mBA0IR,MArImB,IAAmB,IAAlB,SAAEc,GAAe,EACnC,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,IAAe,cAuB9BC,GAAkBC,EAAAA,EAAAA,UAAQ,KAC9B,MAAMC,EAAML,EAASM,KAAKC,MAAM,GAChC,OAAON,EAASO,MAAMpE,MAAMqE,GAASA,EAAKJ,MAAQA,MACjD,CAACJ,EAAUD,EAASM,OAEjBI,GAAaN,EAAAA,EAAAA,UAAQ,IAClBD,EAAe,QACXQ,EAAAA,EAAAA,GAAeR,EAAgBS,MAAMC,eAC5CC,GACH,CAACX,IAOJ,OALA1D,EAAAA,EAAAA,YAAU,KAAO,IAAD,EACd,UAAAsE,SAASC,eAAehB,EAASM,KAAKC,MAAM,WAA5C,SAAiDU,mBAEhD,IAGD,gBAAC,IAAD,CAAQvC,MAAM,UACZ,gBAACG,EAAD,MACA,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,iBAIJ,gBAACzD,EAAD,CAAaE,cAAeoF,GAC1B,gBAAC3B,EAAD,KACE,gBAACf,EAAD,CAASkD,KAAK,WACXC,EAAAA,EAAAA,KAAe,CAACC,EAAGC,IAClB,gBAAClD,EAAD,CACEmD,IAAKF,EAAEG,IACP,uBAAsBH,EAAEG,IACxBjD,KAAI,QAAU8C,EAAEG,IAChBlD,MAAK,OAAS+C,EAAEG,IAChBrF,GAAE,WAAakF,EAAEG,IACjBL,KAAK,MACLM,SAAUH,EAAM,EAAI,UAAOP,GAE1BM,EAAEhD,UAKR+C,EAAAA,EAAAA,KAAgBC,IACf,MAIMK,EAJYxB,EAASO,MAAMhE,QAC9BkF,IAAMf,EAAAA,EAAAA,GAAee,EAAEd,MAAMC,YAAcO,EAAEG,MAGnBI,QAAO,CAACC,EAAKC,KACxC,MAAMxF,GAAIyF,EAAAA,EAAAA,IAAanB,EAAAA,EAAAA,GAAekB,EAAMjB,OAC5C,MAAO,IACFgB,EACH,CAACvF,GAAD,kBAAUuF,EAAIvF,IAAM,IAApB,CAAyBwF,OAE1B,IAEH,OACE,gBAACjD,EAAD,CACEhB,GAAIoB,EAAAA,EACJM,KAAM,CAAEC,QAAS,CAAC,gBAAiB,gBACnC+B,IAAKF,EAAEG,IACPL,KAAK,WACL,6BAA4BE,EAAEG,IAC9BlD,MAAK,OAAS+C,EAAEG,IAChBrF,GAAE,OAASkF,EAAEG,KAEb,gBAACtC,EAAD,KACE,gBAACE,EAAD,KAAWiC,EAAEhD,QAEd2D,OAAOC,QAAQP,GAAYQ,KAAI,QAAEC,EAAMC,GAAR,SAC9B,gBAAC/C,EAAD,CAAUkC,IAAKY,GACb,gBAACxC,EAAD,KACE,gBAACC,EAAD,KAAgBuC,IAElB,gBAACtC,EAAD,KACE,gBAAC,IAAD,KACGuC,EAAaF,KAAKxB,GACjB,gBAAC,IAAD,CACEa,IAAKb,EAAKvE,GACVkG,eAAgB,EAChB/B,IAAKI,EAAKJ,IACV3B,MAAO+B,EAAK/B,MACZ2D,KAAM5B,EAAK4B,KACXzB,KAAMH,EAAKG,KACX0B,KAAM7B,EAAK6B,KACXC,YAAa9B,EAAK+B,OAAOC,KACzBC,OAAQjC,EAAKiC,sBAWjC,gBAACC,EAAD,UAaV,MAAMC,GAAiB1F,EAAAA,EAAAA,SAAO8B,EAAAA,GAAV,6EAAG9B,CAAH,MAId2F,GAAkB3F,EAAAA,EAAAA,SAAO8B,EAAAA,GAAKrB,MAAM,CACxC2B,KAAM,CAAEC,QAAS,CAAC,gBAAiB,kBADhB,8EAAGrC,CAAH,oDAGLK,EAAAA,EAAAA,IAAa,KACTA,EAAAA,EAAAA,IAAa,GAI3BD,EAAAA,MAAAA,SARe,iEAYfA,EAAAA,MAAAA,QAZe,kEAmBrB,SAASqF,IACP,MAAM,QAAEhH,EAAF,UAAWH,EAAX,aAAsBC,GAAiBoB,IACvCiG,EAAYnH,EAAQoH,WAAW1G,GAAMA,EAAEH,KAAOV,KAC9C,UAAEwH,IAAcC,EAAAA,EAAAA,iBAEhBC,GAAUpH,EAAAA,EAAAA,cACbuF,IACC5F,EAAaE,EAAQ0F,GAAKnF,IAC1BiH,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,aAGd,CAAC7H,EAAcE,IAGjB,OACE,gBAACiH,EAAD,KACE,gBAACC,EAAD,KACGC,EAAYnH,EAAQe,OAAS,GAC5B,gBAAC,KAAD,CACE6G,UAAU,YACV1F,KAAMmF,EAAY,SAAW,QAC7BQ,QAAQ,UACRjF,QAAS,KACP2E,EAAQJ,EAAY,KALxB,iBAQgB,gBAAC,MAAD,OAGjBA,EAAY,GACX,gBAAC,KAAD,CACES,UAAU,YACV1F,KAAMmF,EAAY,SAAW,QAC7BQ,QAAQ,UACRjF,QAAS,KACP2E,EAAQJ,EAAY,KAGtB,gBAAC,MAAD,MARF","sources":["webpack://2022.satsummit.io/./src/components/tabs/tabs-context.js","webpack://2022.satsummit.io/./src/components/tabs/index.js","webpack://2022.satsummit.io/./src/pages/agenda.js"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState\n} from 'react';\nimport T from 'prop-types';\n\n// Context\nconst TabsContext = createContext(null);\n\n/**\n * Context provider for the tabs.\n * Stores the active tab and registers tabs when used with <TabItem>\n *\n * @prop {node} children Children to render.\n * @prop {node} initialActive Initial active tab\n * @prop {func} onTabChange Callback when the tab will change.\n */\nexport function TabsManager({ children, initialActive, onTabChange }) {\n  const [activeTab, setActiveTab] = useState(initialActive);\n  const [tabList, setTabList] = useState([]);\n\n  const setActiveTabEnhanced = useCallback(\n    (newTab) =>\n      setActiveTab((oldTab) => {\n        typeof onTabChange === 'function' && onTabChange(newTab, oldTab);\n        return newTab;\n      }),\n    [onTabChange]\n  );\n\n  const registerTab = useCallback(({ id }) => {\n    setTabList((list) => {\n      if (list.find((t) => t.id === id)) {\n        // Already added.\n        return list;\n      } else {\n        return list.concat({ id });\n      }\n    });\n  }, []);\n\n  const unregisterTab = useCallback(({ id }) => {\n    setTabList((list) => list.filter((t) => t.id !== id));\n  }, []);\n\n  // If there's no initial tab set, activate the first one being registered.\n  useEffect(() => {\n    if (!initialActive && tabList.length) {\n      setActiveTabEnhanced(tabList[0].id);\n    }\n  }, [setActiveTabEnhanced, initialActive, tabList]);\n\n  const value = {\n    activeTab,\n    setActiveTab: setActiveTabEnhanced,\n    registerTab,\n    unregisterTab,\n    tabList\n  };\n\n  return <TabsContext.Provider value={value}>{children}</TabsContext.Provider>;\n}\n\nTabsManager.propTypes = {\n  children: T.node,\n  initialActive: T.string,\n  onTabChange: T.func\n};\n\n/**\n * Hook for the tabs.\n * Returns the following:\n *\n * activeTab: String\n * setActiveTab: (id: String) => void\n * registerTab: ({id: String}) => void\n * unregisterTab: ({id: String}) => void\n * tabList: [{id: String}]\n *\n * @returns Object\n */\nexport function useTabs() {\n  const context = useContext(TabsContext);\n\n  if (!context) {\n    throw new Error(\n      `The \\`useTabs\\` hook must be used inside the <TabsContext> component's context.`\n    );\n  }\n\n  return context;\n}\n","import React, { useEffect } from 'react';\nimport T from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport {\n  themeVal,\n  listReset,\n  media,\n  multiply\n} from '@devseed-ui/theme-provider';\n\nimport { useTabs } from './tabs-context';\nimport { variableGlsp } from '$styles/variable-utils';\nimport { VarHeading } from '$styles/variable-components';\nexport * from './tabs-context';\n\n// Use:\n// <TabsManager>  --> Context provider. Doesn't render any wrapper\n//   <TabsNav>  --> Nav list. Renders a Ul\n//     <TabItem label='Tab 1' tabId='t1'>  --> List item. Renders li > a\n//       Tab 1\n//     </TabItem>\n//     <TabItem label='Tab 2' tabId='t2'>\n//       Tab 2\n//     </TabItem>\n//   </TabsNav>\n//   <div>\n//     <TabContent tabId='t1'>Tab 1 content</TabContent> --> Tab content. Renders a div when active.\n//     <TabContent tabId='t2'>Tab 2 content</TabContent>\n//   </div>\n// </TabsManager>\n//\n// Since we're using context, there can be as may wrappers and elements between\n// the tab navigation and the content.\n\nconst TabsList = styled.ul`\n  ${listReset()};\n  display: flex;\n  flex-flow: row nowrap;\n  background: ${themeVal('color.surface')};\n  border-bottom: ${multiply(themeVal('layout.border'), 4)} solid\n    ${themeVal('color.secondary-500')};\n  margin-top: -${multiply(themeVal('layout.border'), 4)};\n  grid-column: content-start / content-end;\n\n  ${media.smallUp`\n    justify-content: flex-end;\n    margin-top: calc(${multiply(themeVal('layout.border'), 4)} - ${variableGlsp(\n    2.75\n  )});\n  `}\n\n  li {\n    width: 50%;\n\n    ${media.smallUp`\n      width: auto;\n    `}\n  }\n`;\n\nconst TabInnerContent = styled.section`\n  grid-column: content-start / content-end;\n  padding: ${variableGlsp(2, 0)};\n`;\n\nconst TabbedContentListLink = styled(VarHeading).attrs({\n  as: 'a',\n  size: 'xsmall'\n})`\n  position: relative;\n  display: block;\n  text-align: center;\n  font-weight: ${themeVal('button.type.weight')};\n  text-decoration: none;\n  border-radius: ${themeVal('shape.rounded')} ${themeVal('shape.rounded')} 0 0;\n  border: 8px solid transparent;\n  margin-bottom: -8px;\n  transition: all 0.24s ease;\n  color: ${themeVal('color.primary')};\n\n  &:visited {\n    color: inherit;\n  }\n\n  &:hover {\n    color: ${themeVal('color.primary-400')};\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      border-color: ${themeVal('color.secondary-500')};\n\n      > span {\n        box-shadow: 0 8px 0 0 white;\n      }\n    `}\n\n  * {\n    line-height: 1;\n  }\n\n  > span {\n    display: block;\n    padding: ${variableGlsp(0.75)};\n  }\n`;\n\nexport function TabsNav(props) {\n  const { children, ...rest } = props;\n\n  return <TabsList {...rest}>{children}</TabsList>;\n}\n\nTabsNav.propTypes = {\n  children: T.node\n};\n\nexport function TabItem(props) {\n  const { children, label, tabId, ...rest } = props;\n  const { activeTab, setActiveTab, registerTab, unregisterTab } = useTabs();\n\n  useEffect(() => {\n    if (tabId) {\n      registerTab({ id: tabId });\n    }\n    return () => {\n      unregisterTab({ id: tabId });\n    };\n  }, [tabId, registerTab, unregisterTab]);\n\n  return (\n    <li>\n      <TabbedContentListLink\n        href='#'\n        onClick={(e) => {\n          e.preventDefault();\n          setActiveTab(tabId);\n        }}\n        title={`Select ${label} tab`}\n        active={activeTab === tabId}\n        aria-selected={String(activeTab === tabId)}\n        {...rest}\n      >\n        {children}\n      </TabbedContentListLink>\n    </li>\n  );\n}\n\nTabItem.propTypes = {\n  children: T.node,\n  tabId: T.string.isRequired,\n  label: T.string\n};\n\nexport function TabContent(props) {\n  const { children, tabId, ...rest } = props;\n  const { activeTab } = useTabs();\n\n  return (\n    activeTab === tabId && (\n      <TabInnerContent {...rest}>{children}</TabInnerContent>\n    )\n  );\n}\n\nTabContent.propTypes = {\n  children: T.node,\n  tabId: T.string.isRequired\n};\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport T from 'prop-types';\nimport { Fade } from 'react-reveal';\nimport {\n  media,\n  multiply,\n  themeVal,\n  visuallyHidden\n} from '@devseed-ui/theme-provider';\nimport {\n  CollecticonArrowLeft,\n  CollecticonArrowRight\n} from '@devseed-ui/collecticons';\nimport { Button } from '@devseed-ui/button';\n\nimport Layout from '$components/layout';\nimport {\n  TabContent,\n  TabItem,\n  TabsManager,\n  TabsNav,\n  useTabs\n} from '$components/tabs';\nimport {\n  PageMainContent,\n  PageMainHero,\n  PageMainHeroHeadline,\n  PageMainTitle\n} from '$styles/page';\nimport Hug from '$styles/hug';\nimport { VarHeading } from '$styles/variable-components';\nimport { variableGlsp } from '$styles/variable-utils';\n\nimport { parseEventDate, timeFromDate } from '$utils/date';\nimport { useMediaQuery } from '$utils/use-media-query';\nimport { AgendaEventList, AgendaEventListItem } from '$components/agenda';\nimport { agendaDays } from '$components/agenda/utils';\nimport { AgendaEntryOverline } from '$components/agenda/event';\nimport withReveal from '$utils/with-reveal';\n\nconst AgendaScrollPadding = createGlobalStyle`\n  html {\n    scroll-padding-top: 5rem;\n\n    ${media.mediumUp`\n      scroll-padding-top: 6rem;\n    `}\n  }\n`;\n\nconst TabbedContent = styled(Hug).attrs({\n  as: 'div'\n})`\n  row-gap: 0;\n`;\n\nconst TabHeader = styled.header`\n  ${visuallyHidden()}\n  grid-column: content-start / content-end;\n`;\n\nconst TabTitle = styled(VarHeading).attrs({\n  as: 'h2',\n  size: 'xlarge'\n})`\n  /* styled-component */\n`;\n\nconst TimeSlot = withReveal(\n  styled(Hug).attrs({\n    as: 'section',\n    grid: { smallUp: ['content-start', 'content-end'] }\n  })`\n    &:not(:first-of-type) > * {\n      ${media.mediumUp`\n      margin-top: 0;\n      padding-top: ${variableGlsp()};\n      border-top: ${multiply(themeVal('layout.border'), 4)} solid ${themeVal(\n        'color.secondary-500'\n      )};\n    `}\n    }\n\n    &:not(:first-of-type) > *:first-child {\n      margin-top: ${variableGlsp(0.75)};\n      padding-top: ${variableGlsp(2)};\n      border-top: ${multiply(themeVal('layout.border'), 4)} solid\n        ${themeVal('color.secondary-500')};\n\n      ${media.mediumUp`\n      margin-top: 0;\n      padding-top: ${variableGlsp()};\n    `}\n    }\n  `,\n  <Fade bottom distance='8rem' />\n);\n\nconst TimeSlotHeader = styled.header`\n  grid-column: content-start / content-end;\n\n  ${media.mediumUp`\n    grid-column: content-start / content-2;\n  `}\n\n  ${media.largeUp`\n    grid-column: content-start / content-3;\n  `}\n`;\n\nconst TimeSlotTitle = styled(VarHeading).attrs({\n  as: 'h3',\n  size: 'small'\n})`\n  /* styled-component */\n`;\n\nconst TimeSlotBody = styled(Hug).attrs({\n  as: 'section',\n  grid: {\n    smallUp: ['content-start', 'content-end'],\n    mediumUp: ['content-2', 'content-end'],\n    largeUp: ['content-3', 'content-end']\n  }\n})`\n  ${AgendaEntryOverline} {\n    span {\n      ${visuallyHidden()}\n    }\n  }\n`;\n\nconst AgendaPage = ({ location }) => {\n  const { allEvent } = useStaticQuery(graphql`\n    query {\n      allEvent(sort: { fields: [slug, date] }) {\n        nodes {\n          parent {\n            ... on MarkdownRemark {\n              html\n            }\n          }\n          id\n          cId\n          title\n          type\n          date\n          room\n          people {\n            ...AllEventPeople\n          }\n        }\n      }\n    }\n  `);\n\n  const hashActiveEvent = useMemo(() => {\n    const cId = location.hash.slice(1);\n    return allEvent.nodes.find((node) => node.cId === cId);\n  }, [allEvent, location.hash]);\n\n  const initialTab = useMemo(() => {\n    return hashActiveEvent\n      ? `tab-${parseEventDate(hashActiveEvent.date).getDate()}`\n      : undefined;\n  }, [hashActiveEvent]);\n\n  useEffect(() => {\n    document.getElementById(location.hash.slice(1))?.scrollIntoView();\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n\n  return (\n    <Layout title='Agenda'>\n      <AgendaScrollPadding />\n      <PageMainContent>\n        <PageMainHero>\n          <PageMainHeroHeadline>\n            <PageMainTitle>Agenda</PageMainTitle>\n          </PageMainHeroHeadline>\n        </PageMainHero>\n\n        <TabsManager initialActive={initialTab}>\n          <TabbedContent>\n            <TabsNav role='tablist'>\n              {agendaDays.map((d, idx) => (\n                <TabItem\n                  key={d.day}\n                  aria-controls={`sep-${d.day}`}\n                  href={`#sep-${d.day}`}\n                  tabId={`tab-${d.day}`}\n                  id={`tab-sep-${d.day}`}\n                  role='tab'\n                  tabIndex={idx > 0 ? '-1' : undefined}\n                >\n                  {d.label}\n                </TabItem>\n              ))}\n            </TabsNav>\n\n            {agendaDays.map((d) => {\n              const dayEvents = allEvent.nodes.filter(\n                (n) => parseEventDate(n.date).getDate() === d.day\n              );\n\n              const hourGroups = dayEvents.reduce((acc, event) => {\n                const t = timeFromDate(parseEventDate(event.date));\n                return {\n                  ...acc,\n                  [t]: [...(acc[t] || []), event]\n                };\n              }, {});\n\n              return (\n                <TabContent\n                  as={Hug}\n                  grid={{ smallUp: ['content-start', 'content-end'] }}\n                  key={d.day}\n                  role='tabpanel'\n                  aria-labelledby={`tab-sep-${d.day}`}\n                  tabId={`tab-${d.day}`}\n                  id={`sep-${d.day}`}\n                >\n                  <TabHeader>\n                    <TabTitle>{d.label}</TabTitle>\n                  </TabHeader>\n                  {Object.entries(hourGroups).map(([time, eventsByTime]) => (\n                    <TimeSlot key={time}>\n                      <TimeSlotHeader>\n                        <TimeSlotTitle>{time}</TimeSlotTitle>\n                      </TimeSlotHeader>\n                      <TimeSlotBody>\n                        <AgendaEventList>\n                          {eventsByTime.map((node) => (\n                            <AgendaEventListItem\n                              key={node.id}\n                              startingHLevel={4}\n                              cId={node.cId}\n                              title={node.title}\n                              type={node.type}\n                              date={node.date}\n                              room={node.room}\n                              htmlContent={node.parent.html}\n                              people={node.people}\n                            />\n                          ))}\n                        </AgendaEventList>\n                      </TimeSlotBody>\n                    </TimeSlot>\n                  ))}\n                </TabContent>\n              );\n            })}\n          </TabbedContent>\n          <TabsSecNav />\n        </TabsManager>\n      </PageMainContent>\n    </Layout>\n  );\n};\n\nAgendaPage.propTypes = {\n  location: T.object\n};\n\nexport default AgendaPage;\n\nconst TabsSecNavSelf = styled(Hug)`\n  /* styled-component */\n`;\n\nconst TabsSecNavInner = styled(Hug).attrs({\n  grid: { smallUp: ['content-start', 'content-end'] }\n})`\n  margin-top: ${variableGlsp(0.5)};\n  padding-bottom: ${variableGlsp(2)};\n\n  /* stylelint-disable no-descending-specificity */\n  > * {\n    ${media.mediumUp`\n      grid-column-start: content-2;\n    `}\n\n    ${media.largeUp`\n      grid-column-start: content-3;\n    `}\n  }\n  /* stylelint-enable no-descending-specificity */\n`;\n\nfunction TabsSecNav() {\n  const { tabList, activeTab, setActiveTab } = useTabs();\n  const activeIdx = tabList.findIndex((t) => t.id === activeTab);\n  const { isLargeUp } = useMediaQuery();\n\n  const goToTab = useCallback(\n    (idx) => {\n      setActiveTab(tabList[idx].id);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    [setActiveTab, tabList]\n  );\n\n  return (\n    <TabsSecNavSelf>\n      <TabsSecNavInner>\n        {activeIdx < tabList.length - 1 && (\n          <Button\n            variation='base-fill'\n            size={isLargeUp ? 'xlarge' : 'large'}\n            fitting='relaxed'\n            onClick={() => {\n              goToTab(activeIdx + 1);\n            }}\n          >\n            View next day <CollecticonArrowRight />\n          </Button>\n        )}\n        {activeIdx > 0 && (\n          <Button\n            variation='base-fill'\n            size={isLargeUp ? 'xlarge' : 'large'}\n            fitting='relaxed'\n            onClick={() => {\n              goToTab(activeIdx - 1);\n            }}\n          >\n            <CollecticonArrowLeft /> View previous day\n          </Button>\n        )}\n      </TabsSecNavInner>\n    </TabsSecNavSelf>\n  );\n}\n"],"names":["TabsContext","createContext","TabsManager","children","initialActive","onTabChange","activeTab","setActiveTab","useState","tabList","setTabList","setActiveTabEnhanced","useCallback","newTab","oldTab","registerTab","id","list","find","t","concat","unregisterTab","filter","useEffect","length","value","Provider","useTabs","context","useContext","Error","TabsList","styled","listReset","themeVal","multiply","media","variableGlsp","TabInnerContent","TabbedContentListLink","VarHeading","attrs","as","size","active","css","TabsNav","props","rest","TabItem","label","tabId","href","onClick","e","preventDefault","title","String","TabContent","AgendaScrollPadding","createGlobalStyle","TabbedContent","Hug","TabHeader","visuallyHidden","TabTitle","TimeSlot","withReveal","grid","smallUp","bottom","distance","TimeSlotHeader","TimeSlotTitle","TimeSlotBody","mediumUp","largeUp","AgendaEntryOverline","location","allEvent","useStaticQuery","hashActiveEvent","useMemo","cId","hash","slice","nodes","node","initialTab","parseEventDate","date","getDate","undefined","document","getElementById","scrollIntoView","role","agendaDays","d","idx","key","day","tabIndex","hourGroups","n","reduce","acc","event","timeFromDate","Object","entries","map","time","eventsByTime","startingHLevel","type","room","htmlContent","parent","html","people","TabsSecNav","TabsSecNavSelf","TabsSecNavInner","activeIdx","findIndex","isLargeUp","useMediaQuery","goToTab","window","scrollTo","top","behavior","variation","fitting"],"sourceRoot":""}