{"version":3,"file":"component---src-pages-speakers-js-ca9a04b2d214714c76a8.js","mappings":"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","sources":["webpack://2022.satsummit.io/./src/pages/speakers.js","webpack://2022.satsummit.io/./src/styles/people.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Fade } from 'react-reveal';\n\nimport {\n  listReset,\n  media,\n  multiply,\n  themeVal,\n  visuallyHidden\n} from '@devseed-ui/theme-provider';\n\nimport Layout from '$components/layout';\n\nimport { PageMainContent, PageMainHero, PageMainTitle } from '$styles/page';\nimport { VarHeading } from '$styles/variable-components';\nimport Hug from '$styles/hug';\nimport { variableGlsp } from '$styles/variable-utils';\nimport { PersonAvatar } from '$styles/people';\nimport withReveal from '$utils/with-reveal';\n\nconst SpeakersHubHeroHeadline = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  gap: ${variableGlsp()};\n  grid-column: content-start / content-end;\n  padding: ${variableGlsp(2, 0)};\n\n  ${media.mediumUp`\n    grid-column: content-start / content-8;\n  `}\n\n  ${media.largeUp`\n    grid-column: content-start / content-12;\n  `}\n\n  ${media.xlargeUp`\n    grid-column: content-start / content-11;\n  `}\n`;\n\nconst SpeakersContent = styled(Hug)`\n  padding: ${variableGlsp(0, 0, 2, 0)};\n`;\n\nconst SpeakersSection = styled.section`\n  grid-column: content-start / content-end;\n  display: flex;\n  flex-flow: column nowrap;\n  gap: ${variableGlsp()};\n\n  &:not(:first-child) {\n    margin-top: ${variableGlsp(1.5)};\n    padding-top: ${variableGlsp(2)};\n    border-top: ${multiply(themeVal('layout.border'), 4)} solid\n      ${themeVal('color.secondary-500')};\n  }\n`;\n\nconst SpeakersSectionHeader = styled.header`\n  ${/* sc-selector */ SpeakersSection}:first-child & {\n    ${visuallyHidden()}\n  }\n`;\n\nconst SpeakersSectionBody = styled.div`\n  /* styled-components */\n`;\n\nconst SpeakersSectionTitle = styled(VarHeading).attrs({\n  as: 'h2',\n  size: 'xlarge'\n})`\n  grid-column: content-start / content-end;\n`;\n\nconst SpeakersMainList = styled.ol`\n  ${listReset()};\n  display: grid;\n  gap: ${variableGlsp()};\n  grid-template-columns: repeat(2, 1fr);\n  background: ${themeVal('color.surface')};\n\n  ${media.mediumUp`\n    grid-template-columns: repeat(3, 1fr);\n  `}\n\n  ${media.xlargeUp`\n    grid-template-columns: repeat(4, 1fr);\n  `}\n`;\n\nconst Speaker = withReveal(\n  styled.article`\n    position: relative;\n    z-index: 1;\n    background: ${themeVal('color.surface')};\n    color: ${themeVal('color.base')};\n    border-radius: 0 0 ${themeVal('shape.rounded')} ${themeVal('shape.rounded')};\n    box-shadow: ${themeVal('boxShadow.elevationD')};\n    border-top: ${multiply(themeVal('layout.border'), 4)} solid\n      ${themeVal('color.secondary-500')};\n    height: 100%;\n\n    /* Improve performance */\n    transform: translate3d(0, 0, 0);\n  `,\n  <Fade bottom distance='8rem' />\n);\n\nconst SpeakerLink = styled(Link)`\n  display: flex;\n  flex-flow: column nowrap;\n  height: 100%;\n  transition: opacity 0.24s ease-in-out;\n  text-decoration: none;\n\n  &:visited {\n    color: inherit;\n  }\n\n  &:hover {\n    opacity: 0.64;\n  }\n`;\n\nconst SpeakerHeader = styled.header`\n  display: flex;\n  flex-flow: column nowrap;\n  gap: ${variableGlsp(0.25)};\n  padding: ${variableGlsp(0.875, 1, 1, 1)};\n`;\n\nconst SpeakerAvatar = styled(PersonAvatar)`\n  order: -1;\n  border-top: none;\n`;\n\nconst SpeakerTitle = styled(VarHeading).attrs({\n  as: 'h3',\n  size: 'large'\n})`\n  line-height: calc(0.5rem + 0.75em);\n`;\n\nconst SpeakerSubtitle = styled.p`\n  font-size: 0.75rem;\n\n  ${media.mediumUp`\n    font-size: 1rem;\n    line-height: 1.25rem;\n  `}\n`;\n\nconst SpeakersOthersList = styled(SpeakersMainList)`\n  /* styled-component */\n`;\n\nconst OthersSpeaker = styled.article`\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst OthersSpeakerHeader = styled.header`\n  display: flex;\n  flex-flow: column nowrap;\n  gap: ${variableGlsp(0.25)};\n`;\n\nconst OthersSpeakerTitle = styled(VarHeading).attrs({\n  as: 'h3',\n  size: 'small'\n})`\n  line-height: calc(0.5rem + 0.75em);\n`;\n\nconst OthersSpeakerSubtitle = styled(SpeakerSubtitle)`\n  /* styled-component */\n`;\n\nconst SpeakersPage = () => {\n  const { allPeople } = useStaticQuery(graphql`\n    query {\n      allPeople(sort: { fields: [slug] }) {\n        nodes {\n          id\n          slug\n          title\n          avatar {\n            childImageSharp {\n              gatsbyImageData(width: 640, height: 640, placeholder: BLURRED)\n            }\n          }\n          role\n          company\n          group\n        }\n      }\n    }\n  `);\n\n  const { main, other } = useMemo(\n    () =>\n      allPeople.nodes.reduce(\n        (acc, node) => {\n          if (node.group === 'main') {\n            acc.main.push(node);\n          } else {\n            acc.other.push(node);\n          }\n          return acc;\n        },\n        { main: [], other: [] }\n      ),\n    [allPeople.nodes]\n  );\n\n  return (\n    <Layout title='Speakers'>\n      <PageMainContent>\n        <PageMainHero>\n          <SpeakersHubHeroHeadline>\n            <PageMainTitle>Speakers</PageMainTitle>\n          </SpeakersHubHeroHeadline>\n        </PageMainHero>\n\n        <SpeakersContent>\n          <SpeakersSection>\n            <SpeakersSectionHeader>\n              <SpeakersSectionTitle>Main speakers</SpeakersSectionTitle>\n            </SpeakersSectionHeader>\n            <SpeakersSectionBody>\n              <SpeakersMainList>\n                {main.map((speaker) => (\n                  <li key={speaker.id}>\n                    <Speaker>\n                      <SpeakerLink to={`/speakers/${speaker.slug}`}>\n                        <SpeakerHeader>\n                          <SpeakerTitle>{speaker.title}</SpeakerTitle>\n                          <SpeakerSubtitle>\n                            {speaker.role} at {speaker.company}\n                          </SpeakerSubtitle>\n                        </SpeakerHeader>\n                        <SpeakerAvatar>\n                          <GatsbyImage\n                            image={getImage(speaker.avatar)}\n                            alt={`Picture of ${speaker.title}`}\n                            objectFit='contain'\n                          />\n                        </SpeakerAvatar>\n                      </SpeakerLink>\n                    </Speaker>\n                  </li>\n                ))}\n              </SpeakersMainList>\n            </SpeakersSectionBody>\n          </SpeakersSection>\n\n          {!!other.length && (\n            <SpeakersSection>\n              <SpeakersSectionHeader>\n                <SpeakersSectionTitle>\n                  Other speakers include\n                </SpeakersSectionTitle>\n              </SpeakersSectionHeader>\n              <SpeakersSectionBody>\n                <SpeakersOthersList>\n                  {other.map((speaker) => (\n                    <li key={speaker.id}>\n                      <OthersSpeaker>\n                        <OthersSpeakerHeader>\n                          <OthersSpeakerTitle>\n                            {speaker.title}\n                          </OthersSpeakerTitle>\n                          <OthersSpeakerSubtitle>\n                            {speaker.role} at {speaker.company}\n                          </OthersSpeakerSubtitle>\n                        </OthersSpeakerHeader>\n                      </OthersSpeaker>\n                    </li>\n                  ))}\n                </SpeakersOthersList>\n              </SpeakersSectionBody>\n            </SpeakersSection>\n          )}\n        </SpeakersContent>\n      </PageMainContent>\n    </Layout>\n  );\n};\n\nexport default SpeakersPage;\n","import styled from 'styled-components';\n\nimport { multiply, themeVal } from '@devseed-ui/theme-provider';\n\nexport const PersonAvatar = styled.figure`\n  position: relative;\n  inset: 0;\n  z-index: -1;\n  background: linear-gradient(\n    to top,\n    ${themeVal('color.primary-500')} 0%,\n    ${themeVal('color.secondary-500')}64 100%\n  );\n  border-top: ${multiply(themeVal('layout.border'), 4)} solid\n    ${themeVal('color.secondary-500')};\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    mix-blend-mode: screen;\n    filter: grayscale(100%) contrast(112%);\n\n    /* Improve performance */\n    transform: translate3d(0, 0, 0);\n  }\n\n  &::after {\n    position: absolute;\n    inset: 0;\n    z-index: 1;\n    background: linear-gradient(\n      to top,\n      ${themeVal('color.primary-500')} 0%,\n      ${themeVal('color.primary-500')}00 100%\n    );\n    content: '';\n    opacity: 0.16;\n  }\n`;\n"],"names":["SpeakersHubHeroHeadline","styled","variableGlsp","media","SpeakersContent","Hug","SpeakersSection","multiply","themeVal","SpeakersSectionHeader","visuallyHidden","SpeakersSectionBody","SpeakersSectionTitle","VarHeading","attrs","as","size","SpeakersMainList","listReset","Speaker","withReveal","bottom","distance","SpeakerLink","Link","SpeakerHeader","SpeakerAvatar","PersonAvatar","SpeakerTitle","SpeakerSubtitle","SpeakersOthersList","OthersSpeaker","OthersSpeakerHeader","OthersSpeakerTitle","OthersSpeakerSubtitle","allPeople","useStaticQuery","main","other","useMemo","nodes","reduce","acc","node","group","push","title","map","speaker","key","id","to","slug","role","company","G","image","getImage","avatar","alt","objectFit","length"],"sourceRoot":""}